/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.Color;
import java.awt.Graphics;
import model.*;

/**
 *
 * @author LebedenkoN
 */
public class ElementBox extends javax.swing.JPanel {

    private Schema schema = null;
    private Element focusedElement = null;
    private int zoom = 50;
    private boolean showValues = true;
    Color borderColor = Color.red;

    /**
     * Creates new form ElementBox
     */
    public ElementBox() {
        initComponents();
    }

    @Override
    public void paintComponent(Graphics graphics) {
        super.paintComponent(graphics);
        if (schema == null) {
            graphics.drawString("Create schema.", 15, 15);
        } else {
            this.drawElements(graphics);
        }
    }

    public void setSchema(Schema schema) {
        this.schema = schema;
    }

    public void setFocusedElement(Element focusedElement) {
        this.focusedElement = focusedElement;
    }

    public int getZoom() {
        return zoom;
    }

    public void setZoom(int zoom) {
        this.zoom = zoom;
    }

    public void setShowValues(boolean showValues) {
        this.showValues = showValues;
    }

    public Color getBorderColor() {
        return borderColor;
    }

    public void setBorderColor(Color borderColor) {
        this.borderColor = borderColor;
    }
    
    private void drawElements(Graphics graphics) {
        for (Element element : schema.getElements()) {
            if (focusedElement != null && focusedElement.getId() == element.getId()) {
                graphics.setColor(borderColor);
            }
            graphics.drawRect(element.getX(), element.getY(), zoom, zoom);
            graphics.drawString(
                    element.getClass().getSimpleName(),
                    element.getX() + 12,
                    element.getY() + zoom / 2
            );
            graphics.setColor(Color.black);
            if (this.showValues) {
                graphics.drawString(
                        element.getValue() + "",
                        element.getX() + 60,
                        element.getY() + zoom / 2
                );
            }
            this.drawElementRelationship(graphics, element);
        }
    }

    private void drawElementRelationship(Graphics graphics, Element element) {
        for (Element input : element.getInput()) {
            graphics.drawLine(
                    element.getX(),
                    element.getY() + zoom / 2,
                    input.getX() + zoom,
                    input.getY() + zoom / 2
            );
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
